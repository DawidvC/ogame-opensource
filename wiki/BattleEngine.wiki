#summary Технические детали боевого движка

= Устройство движка =

Боевой движок реализован в виде программы, написанной на Си. Со стороны PHP к нему прикручен скрипт battle.php, который подготавливает данные для боя, передает их боевому движку, а также обрабатывает результаты боя и генерирует боевые доклады.

==Алгоритм работы==

 * В БД размещается таблица battledata, со следующей структурой :

|| *поле* || *тип* || *описание* ||
||battle_id||INT PRIMARY||уникальный номер записи, счётчик battle_id хранится в таблице uni (nextbattle)||
||
||source||TEXT||исходные данные для боевого движка, текстовой массив||
||result||TEXT||выходные данные||

 * После того, как сработало событие `Атака`, скрипт battle.php подготавливает исходные данные битвы и добавляет запись в таблицу battledata.

 * Затем через командную строку запускается программа боевого движка с параметрами : battle_id записи в таблице battledata, а также данными для подключение к БД MySQL (логин, пароль, хост, имя БД и префикс таблиц).

 * Боевой движок читает из базы данных исходные параметры и конвертирует их в двоичный формат, после чего производится расчёт боя.

 * Результаты расчётов заносятся в базу данных и боевой движок завершает свою работу.

 * Скрипт battle.php используя данные расчётов из таблицы battledata генерирует боевые доклады и вносит изменения в аккаунты игроков.

 * Запись в таблице battledata удаляется

==Формат входных данных==

Входные данные содержат исходные параметры битвы в текстовом формате.
Для удобства разбора в Си, значения представлены в формате "переменная = значение".

{{{
Rapidfire = 1
FID = 30
DID = 0
Attackers = N
Defenders = M
AttackerN = (ID WEAP SHLD ARMR MT BT LF HF CR LINK COLON REC SPY BOMB SS DEST DS BC)
DefenderM = (ID WEAP SHLD ARMR MT BT LF HF CR LINK COLON REC SPY BOMB SS DEST DS BC RT LL HL GS IC PL SDOM LDOM)
}}}

Rapidfire - 1: включить скорострел, 0 - без скорострела<br>
FID - количество выпадения флота в обломки, в процентах<br>
DID - количество выпадения обороны в обломки, в процентах<br>

Attacker - количество атакующих слотов (N = 1...MAX)<br>
Defenders - количество обороняющихся слотов (M = 1...MAX)<br>
(обычно не более 16 слотов, но может зависеть от настроек вселенной)

для каждого атакера и дефа соответствующие строки Attacker0, Attacker1, Defender0 итд. счёт ведется с нуля.

ID - ID планеты/флота, которым принадлежит слот, в расчётах не используется

WEAP - уровень Оружейной технологии<br>
SHLD - уровень Щитовой технологии<br>
ARMR - уровень Брони <br>

Количество флота соотв. типа:<br>
MT - малый транспорт<br>
BT - большой транспорт<br>
LF - легкий истребитель<br>
HF - тяжелый истребитель<br>
CR - крейсер<br>
LINK - линкор<br>
COLON - колонизатор<br>
REC - переработчик<br>
SPY - шпионский зонд<br>
BOMB - бомбардировщик<br>
SS - солнечный спутник<br>
DEST - уничтожитель<br>
DS - звезда смерти<br>
BC - линейный крейсер<br>

Количество обороны соотв. типа:<br>
RT - ракетная установка<br>
LL - легкий лазер<br>
HL - тяжелый лазер<br>
GS - гаусс<br>
IC - ионная пушка<br>
PL - плазма<br>
SDOM - малый купол<br>
LDOM - большой купол<br>

==Формат выходных данных== 

Выходные данные представлены в формате для PHP-функции unserialize().

Формат (после преобразования unserialize()):

{{{
Array (
   'result' => 'awon' (Атакующий выиграл), 'dwon' (Обороняющийся выиграл), 'draw' (Ничья)
   'dm' => количество металла в Поле обломков
   'dk' => количество кристалла в Поле обломков

   'rounds' => Array (
       [0] => Array (
            'ashoot' => Атакующий флот делает: 988 выстрела(ов)
            'apower' => общей мощностью 512.720.100
            'dabsorb' => Щиты обороняющегося поглощают 43.724
            'dshoot' => Обороняющийся флот делает 1.651 выстрела(ов)
            'dpower' => общей мощностью 428.728
            'aabsorb' => Щиты атакующего поглощают 355.453

            'attackers' => Array (    // слоты атакующих
                  [0] => Array ( 'id'=>100002, 202=>5, 203=>6, ... ),   // флоты
                  [1] => Array ( )
            )

            'defenders' => Array (    // слоты обороняющихся
                  [0] => Array ( 'id'=>100006, 202=>5, 203=>6, ..., 401=>5, 402=>44 ),   // флоты и оборона
                  [1] => Array ( )
            )

       ),
       [1] => Array ( ... )   // следующий раунд
   )
)
}}}

Для атакующих и защитников 1...m - id это fleet_id их флотов. Для обороняющегося #0 id это planet_id его планеты.

Расчёт захваченных ресурсов, восстановленной обороны и шанс возникновения луны (и её создание) производится скриптом battle.php, на основании полученных данных.

Пример :

serialized() - данные, которые помещаются в поле "result":
{{{
a:4:{s:6:"rounds";a:1:{i:0;a:8:{s:6:"ashoot";d:47;s:6:"apower";d:18800000;s:7:"dabsorb";d:6501;s:6:"dshoot";d:7528;s:6:"dpower";d:3545091;s:7:"aabsorb";d:621887;s:9:"attackers";a:1:{i:0;a:15:{s:2:"id";i:10188;i:202;i:0;i:203;i:0;i:204;i:0;i:205;i:0;i:206;i:0;i:207;i:0;i:208;i:0;i:209;i:0;i:210;i:0;i:211;i:0;i:212;i:0;i:213;i:0;i:214;i:0;i:215;i:0;}}s:9:"defenders";a:1:{i:0;a:23:{s:2:"id";i:1;i:202;i:21;i:203;i:17;i:204;i:0;i:205;i:3;i:206;i:3;i:207;i:1;i:208;i:5512;i:209;i:4;i:210;i:32;i:211;i:0;i:212;i:45;i:213;i:6;i:214;i:2;i:215;i:1639;i:401;i:165;i:402;i:12;i:403;i:11;i:404;i:3;i:405;i:4;i:406;i:0;i:407;i:1;i:408;i:1;}}}}s:6:"result";s:4:"dwon";s:2:"dm";d:2229800;s:2:"dk";d:2001400;}
}}}

unserialized() - данные, готовые для обработки PHP-скриптом:
{{{
Array
(
    [rounds] => Array
        (
            [0] => Array
                (
                    [ashoot] => 47
                    [apower] => 1.88E+7
                    [dabsorb] => 6501
                    [dshoot] => 7528
                    [dpower] => 3545091
                    [aabsorb] => 621887
                    [attackers] => Array
                        (
                            [0] => Array
                                (
                                    [id] => 10188
                                    [202] => 0
                                    [203] => 0
                                    [204] => 0
                                    [205] => 0
                                    [206] => 0
                                    [207] => 0
                                    [208] => 0
                                    [209] => 0
                                    [210] => 0
                                    [211] => 0
                                    [212] => 0
                                    [213] => 0
                                    [214] => 0
                                    [215] => 0
                                )

                        )

                    [defenders] => Array
                        (
                            [0] => Array
                                (
                                    [id] => 1
                                    [202] => 21
                                    [203] => 17
                                    [204] => 0
                                    [205] => 3
                                    [206] => 3
                                    [207] => 1
                                    [208] => 5512
                                    [209] => 4
                                    [210] => 32
                                    [211] => 0
                                    [212] => 45
                                    [213] => 6
                                    [214] => 2
                                    [215] => 1639
                                    [401] => 165
                                    [402] => 12
                                    [403] => 11
                                    [404] => 3
                                    [405] => 4
                                    [406] => 0
                                    [407] => 1
                                    [408] => 1
                                )

                        )

                )

        )

    [result] => dwon
    [dm] => 2229800
    [dk] => 2001400
)
}}}