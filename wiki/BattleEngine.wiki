#summary Технические детали боевого движка

= Устройство движка =

Боевой движок реализован в виде программы, написанной на Си.

==Алгоритм работы==

 * В БД создается таблица battledata :

|| *поле* || *тип* || *описание* ||
||bid||INT PRIMARY||уникальный номер записи, счётчик bid хранится в таблице uni (next_battle)||
||
||source||TEXT||исходные данные для боевого движка, текстовой массив||
||result||TEXT||выходные данные||

 * После того, как сработало событие `Атака`, скрипт battle.php подготавливает исходные данные битвы и добавляет запись в таблицу battledata.

 * Затем через командную строку запускается программа боевого движка с параметрами : id записи в таблице battledata, а также данными для подключение к БД MySQL (логин, пароль, хост, имя БД и префикс таблиц).

 * Боевой движок читает из базы данных исходные параметры и конвертирует их в двоичный формат, после чего производится расчёт боя.

 * Результаты расчётов заносятся в базу данных и боевой движок завершает свою работу.

 * Скрипт battle.php используя данные расчётов из таблицы battledata генерирует боевые доклады и вносит изменения в аккаунты игроков.

 * Запись в таблице battledata удаляется

==Формат входных данных==

Входные данные содержат исходные параметры битвы в текстовом формате.
Для удобства разбора в Си, значения представлены в формате "переменная = значение".

{{{
Rapidfire = 1
FID = 30
DID = 0
Attackers = N
Defenders = M
AttackerN = (PLANET_ID WEAP SHLD ARMR MT BT LF HF CR LINK COLON REC SPY BOMB SS DEST DS BC)
DefenderM = (PLANET_ID WEAP SHLD ARMR MT BT LF HF CR LINK COLON REC SPY BOMB SS DEST DS BC RT LL HL GS IC PL SDOM LDOM)
}}}

Rapidfire - 1: включить скорострел, 0 - без скорострела<br>
FID - количество выпадения флота в обломки, в процентах<br>
DID - количество выпадения обороны в обломки, в процентах<br>

Attacker - количество атакующих слотов (N = 1...16)<br>
Defenders - количество обороняющихся слотов (M = 1...16)

для каждого атакера и дефа соответствующие строки Attacker0, Attacker1, Defender0 итд. счёт ведется с нуля.

PLANET_ID - ID планеты, которой принадлежит слот, в расчётах не используется

WEAP - уровень Оружейной технологии<br>
SHLD - уровень Щитовой технологии<br>
ARMR - уровень Брони <br>

Количество флота соотв. типа:<br>
MT - малый транспорт<br>
BT - большой транспорт<br>
LF - легкий истребитель<br>
HF - тяжелый истребитель<br>
CR - крейсер<br>
LINK - линкор<br>
COLON - колонизатор<br>
REC - переработчик<br>
SPY - шпионский зонд<br>
BOMB - бомбардировщик<br>
SS - солнечный спутник<br>
DEST - уничтожитель<br>
DS - звезда смерти<br>
BC - линейный крейсер<br>

Количество обороны соотв. типа:<br>
RT - ракетная установка<br>
LL - легкий лазер<br>
HL - тяжелый лазер<br>
GS - гаусс<br>
IC - ионная пушка<br>
PL - плазма<br>
SDOM - малый купол<br>
LDOM - большой купол<br>

==Формат выходных данных== 

Выходные данные представлены в формате для PHP-функции unserialize().

Формат (после преобразования unserialize()):

{{{
Array (
   'result' => 'awon' (Атакующий выиграл), 'dwon' (Обороняющийся выиграл), 'draw' (Ничья)
   'dm' => количество металла в Поле обломков
   'dk' => количество кристалла в Поле обломков

   'rounds' => Array (
       [0] => Array (
            'ashoot' => Атакующий флот делает: 988 выстрела(ов)
            'apower' => общей мощностью 512.720.100
            'dabsorb' => Щиты обороняющегося поглощают 43.724
            'dshoot' => Обороняющийся флот делает 1.651 выстрела(ов)
            'dpower' => общей мощностью 428.728
            'aabsorb' => Щиты атакующего поглощают 355.453

            'attackers' => Array (    // слоты атакующих
                  [0] => Array ( 'planet_id'=>100002, 202=>5, 203=>6, ... ),   // флоты
                  [1] => Array ( )
            )

            'defenders' => Array (    // слоты обороняющихся
                  [0] => Array ( 'planet_id'=>100006, 202=>5, 203=>6, ..., 401=>5, 402=>44 ),   // флоты и оборона
                  [1] => Array ( )
            )

       ),
       [1] => Array ( ... )   // следующий раунд
   )
)
}}}

Расчёт захваченных ресурсов, восстановленной обороны и шанс возникновения луны (и её создание) производится скриптом battle.php, на основании полученных данных.